⛳ 轨迹生产
===================================

本模块提供了一个TripGeneration类，你只需要指定一个路网，该模块可以帮助你模拟行车并且生成轨迹数据、GPS数据。

TripGeneration类初始化
-----------------------------


路网link和node的数据要求见：:doc:`数据要求`


.. _GPS数据生产代码示例:

新建一个TripGeneration类的示例代码如下：

.. code-block:: python
    :linenos:

    # 从gotrackit导入相关模块：Net和TripGeneration
    import geopandas as gpd
    from gotrackit.map.Net import Net
    from gotrackit.generation.SampleTrip import TripGeneration


    if __name__ == '__main__':
        # 1.构读取link和node
        link = gpd.read_file(r'./data/input/net/xian/modifiedConn_link.shp')
        node = gpd.read_file(r'./data/input/net/xian/modifiedConn_node.shp')

        # 1.构建一个net, 要求路网线层和路网点层必须是WGS-84, EPSG:4326 地理坐标系
        my_net = Net(link_gdf=link, node_gdf=node)
        my_net.init_net()  # 路网对象初始化

        # 新建一个行程生成类
        ts = TripGeneration(net=my_net, loc_error_sigma=50.0, loc_frequency=30, time_step=0.1)


TripGeneration类的初始化参数如下：

* net
    路网对象，必须指定

* time_step
    仿真步长(s)，默认0.1s

* speed_miu
    仿真速度均值(m/s)，默认12.0

* speed_sigma
    仿真速度标准差(m/s)，默认3.6

* save_gap
    每多少仿真步保存一次真实轨迹数据，整数，默认1

* loc_frequency
    每多少s进行一次GPS定位，默认2.0，该值必须大于仿真步长

* loc_error_sigma
    定位误差标准差(m)，默认40.0

* loc_error_miu
    定位误差均值(m)，默认0.0


TripGeneration类提供了三种方法来生成trip：随机路径trip、指定OD对trip、指定路径的trip，这三个方法有以下的共用参数：


* instant_output
    是否即时输出，即是否每计算完一次行程就存储GPS数据文件、逐帧轨迹文件，默认False

* out_fldr
    存储输出文件的目录，默认当前目录r'./'

* file_type
    输出文件的类型，shp或者geojson

* time_format
    输出GPS数据的时间列的格式，默认"%Y-%m-%d %H:%M:%S"，可以参照pandas中pd.to_datetime()函数的format参数

    参考：`pd.to_datetime解释 <https://pandas.pydata.org/pandas-docs/version/0.20/generated/pandas.to_datetime.html#>`_、`ISO_8601 <https://en.wikipedia.org/wiki/ISO_8601>`_


* start_year、start_month、start_day
    起始年月日，默认2022、5、15


* start_hour、start_minute、start_second
    起始时分秒，默认10、20、12


* agent_flag
    标志字符，默认agent


生成随机路径trip
-----------------------------
TripGeneration提供随机路径trip的生成方法generate_rand_trips，需要额外指定trip_num参数

* trip_num
    行程数，整数，一共输出多少次行程，默认10


随机路径trip生成代码示例：

.. code-block:: python
    :linenos:

    # 随机生成行程并且输出GPS数据
    ts.generate_rand_trips(trip_num=5, out_fldr=r'./data/output/sample_gps',
                           agent_flag='0527-agent', instant_output=True)


生成指定OD的trip
-----------------------------

.. note::
    该功能从v0.3.11开始推出

TripGeneration提供指定OD路径trip的生成方法generate_od_trips，需要额外指定od_set参数

* od_set
    起始节点OD对，按照起始节点进行路径搜索后生成trip，形如[(o_node, d_node), ...]
    例如[(12, 23), (34, 111)]，表示生成2个trip，分别为节点12到节点23的最短路径、节点34到节点111的最短路径


.. code-block:: python
    :linenos:

    # 取出节点数据
    node_gdf = my_net.get_node_data().to_crs('EPSG:4326').reset_index(drop=True)
    o_set = node_gdf.sample(n=5)['node_id'].to_list()
    od_set = [(o, d) for o in o_set for d in o_set]

    # 依据指定的OD起终点生成trip
    ts.generate_od_trips(od_set=od_set, out_fldr=r'./data/output/sample_gps', time_format="%Y-%m-%d %H:%M:%S.%f",
                         agent_flag='0916-agent', instant_output=False, file_type='shp',
                         start_year=2023)

生成指定路径的trip
-----------------------------

.. note::
    该功能从v0.3.11开始推出

TripGeneration提供指定节点路径trip的生成方法generate_destined_trips，需要额外指定node_paths参数

* node_paths
    路径节点序列，形如[[node1, node2, node3, ...], [node5, node7, node9, ...],...]
    例如[(12, 90, 9012, 123), (3412, 23, 112, 23), (34, 344, 111)]，表示生成3个trip，每个trip的节点序列已经指定好


.. code-block:: python
    :linenos:

    # 利用net对象的k节点间的K最短路接口获取节点路径序列
    node_path = list()
    for path in my_net.shortest_k_paths(110943, 225405, 6):
        node_path.append(path)

    # 依据指定的OD起终点生成trip
    ts.generate_destined_trips(node_paths=node_path, out_fldr=r'./data/output/sample_gps', time_format="%Y-%m-%d %H:%M:%S.%f",
                               agent_flag='0916-agent', instant_output=False, file_type='shp',
                               start_year=2023)